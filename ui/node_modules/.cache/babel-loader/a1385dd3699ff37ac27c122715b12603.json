{"ast":null,"code":"import _classCallCheck from \"/Users/pesiakovitz/goApps/src/restaurants/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pesiakovitz/goApps/src/restaurants/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pesiakovitz/goApps/src/restaurants/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pesiakovitz/goApps/src/restaurants/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pesiakovitz/goApps/src/restaurants/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pesiakovitz/goApps/src/restaurants/ui/src/components/restaurentsList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\"; // import { Table, TableHeaderColumn } from 'react-bootstrap';\n\nimport { ReactBsTable } from 'react-bootstrap-table';\nvar Table = ReactBsTable.BootstrapTable;\nvar TableHeaderColumn = ReactBsTable.TableHeaderColumn; // import { getrestaurents } from \"../redux/selectors\";\n// import { getrestaurentsByVisibilityFilter } from \"../redux/selectors\";\n// import { VISIBILITY_FILTERS } from \"../constants\";\n// const restaurentList = ({ restaurents }) => (\n//   <ul className=\"restaurent-list\">\n//     {restaurents && restaurents.length\n//       ? restaurents.map((restaurent, index) => {\n//           return <restaurent key={`restaurent-${restaurent.id}`} restaurent={restaurent} />;\n//         })\n//       : \"No restaurents\"}\n//   </ul>\n// );\n\nvar restaurantsTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(restaurantsTable, _React$Component);\n\n  function restaurantsTable() {\n    _classCallCheck(this, restaurantsTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(restaurantsTable).apply(this, arguments));\n  }\n\n  _createClass(restaurantsTable, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Table, {\n        data: restaurants,\n        options: {\n          noDataText: 'No Restaurents'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"id\",\n        isKey: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"ID\"), React.createElement(TableHeaderColumn, {\n        dataField: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Type\"), React.createElement(TableHeaderColumn, {\n        dataField: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Phone\"), React.createElement(TableHeaderColumn, {\n        dataField: \"location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Location\"));\n    }\n  }]);\n\n  return restaurantsTable;\n}(React.Component); // const mapStateToProps = state => {\n//   const { byIds, allIds } = state.restaurents || {};\n//   const restaurents =\n//     allIds && state.restaurents.allIds.length\n//       ? allIds.map(id => (byIds ? { ...byIds[id], id } : null))\n//       : null;\n//   return { restaurents };\n// };\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    restaurants: state.restaurants\n  }; // const { visibilityFilter } = state;\n  // const restaurents = getrestaurentsByVisibilityFilter(state, visibilityFilter);\n  // return { restaurents };\n  //   const allrestaurents = getrestaurents(state);\n  //   return {\n  //     restaurents:\n  //       visibilityFilter === VISIBILITY_FILTERS.ALL\n  //         ? allrestaurents\n  //         : visibilityFilter === VISIBILITY_FILTERS.COMPLETED\n  //           ? allrestaurents.filter(restaurent => restaurent.completed)\n  //           : allrestaurents.filter(restaurent => !restaurent.completed)\n  //   };\n}; // export default restaurentList;\n\n\nexport default connect(mapStateToProps)(restaurentsTable);","map":{"version":3,"sources":["/Users/pesiakovitz/goApps/src/restaurants/ui/src/components/restaurentsList.js"],"names":["React","connect","ReactBsTable","Table","BootstrapTable","TableHeaderColumn","restaurantsTable","restaurants","noDataText","Component","mapStateToProps","state","restaurentsTable"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,IAAIC,KAAK,GAAGD,YAAY,CAACE,cAAzB;AACA,IAAIC,iBAAiB,GAAGH,YAAY,CAACG,iBAArC,C,CACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEMC,gB;;;;;;;;;;;;;6BACK;AACP,aACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAGC,WAAd;AAA4B,QAAA,OAAO,EAAG;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,IAA7B;AAAkC,QAAA,KAAK,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,EAKE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,CADF;AASD;;;;EAX4BR,KAAK,CAACS,S,GAcrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AAAEJ,IAAAA,WAAW,EAAEI,KAAK,CAACJ;AAArB,GAAP,CAD+B,CAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAdD,C,CAeA;;;AACA,eAAeN,OAAO,CAACS,eAAD,CAAP,CAAyBE,gBAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n// import { Table, TableHeaderColumn } from 'react-bootstrap';\nimport { ReactBsTable } from 'react-bootstrap-table'\nvar Table = ReactBsTable.BootstrapTable;\nvar TableHeaderColumn = ReactBsTable.TableHeaderColumn;\n// import { getrestaurents } from \"../redux/selectors\";\n// import { getrestaurentsByVisibilityFilter } from \"../redux/selectors\";\n// import { VISIBILITY_FILTERS } from \"../constants\";\n\n// const restaurentList = ({ restaurents }) => (\n//   <ul className=\"restaurent-list\">\n//     {restaurents && restaurents.length\n//       ? restaurents.map((restaurent, index) => {\n//           return <restaurent key={`restaurent-${restaurent.id}`} restaurent={restaurent} />;\n//         })\n//       : \"No restaurents\"}\n//   </ul>\n// );\n\nclass restaurantsTable extends React.Component {\n  render() {\n    return (\n      <Table data={ restaurants } options={ { noDataText: 'No Restaurents' } }>\n        <TableHeaderColumn dataField='id' isKey>ID</TableHeaderColumn>\n        <TableHeaderColumn dataField='name'>Name</TableHeaderColumn>\n        <TableHeaderColumn dataField='type'>Type</TableHeaderColumn>\n        <TableHeaderColumn dataField='phone'>Phone</TableHeaderColumn>\n        <TableHeaderColumn dataField='location'>Location</TableHeaderColumn>\n      </Table>\n    );\n  }\n}\n\n// const mapStateToProps = state => {\n//   const { byIds, allIds } = state.restaurents || {};\n//   const restaurents =\n//     allIds && state.restaurents.allIds.length\n//       ? allIds.map(id => (byIds ? { ...byIds[id], id } : null))\n//       : null;\n//   return { restaurents };\n// };\n\nconst mapStateToProps = state => {\n  return { restaurants: state.restaurants };\n  // const { visibilityFilter } = state;\n  // const restaurents = getrestaurentsByVisibilityFilter(state, visibilityFilter);\n  // return { restaurents };\n  //   const allrestaurents = getrestaurents(state);\n  //   return {\n  //     restaurents:\n  //       visibilityFilter === VISIBILITY_FILTERS.ALL\n  //         ? allrestaurents\n  //         : visibilityFilter === VISIBILITY_FILTERS.COMPLETED\n  //           ? allrestaurents.filter(restaurent => restaurent.completed)\n  //           : allrestaurents.filter(restaurent => !restaurent.completed)\n  //   };\n};\n// export default restaurentList;\nexport default connect(mapStateToProps)(restaurentsTable);\n"]},"metadata":{},"sourceType":"module"}