{"ast":null,"code":"\"use strict\"; // Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _createClass = require(\"/Users/pesiakovitz/goApps/src/restaurants/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/pesiakovitz/goApps/src/restaurants/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar playcustomapp_v1;\n\n(function (playcustomapp_v1) {\n  /**\n   * Google Play Custom App Publishing API\n   *\n   * An API to publish custom Android apps.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const playcustomapp = google.playcustomapp('v1');\n   *\n   * @namespace playcustomapp\n   * @type {Function}\n   * @version v1\n   * @variation v1\n   * @param {object=} options Options for Playcustomapp\n   */\n  var Playcustomapp = function Playcustomapp(options, google) {\n    _classCallCheck(this, Playcustomapp);\n\n    this.context = {\n      _options: options || {},\n      google: google\n    };\n    this.accounts = new Resource$Accounts(this.context);\n  };\n\n  playcustomapp_v1.Playcustomapp = Playcustomapp;\n\n  var Resource$Accounts = function Resource$Accounts(context) {\n    _classCallCheck(this, Resource$Accounts);\n\n    this.context = context;\n    this.customApps = new Resource$Accounts$Customapps(this.context);\n  };\n\n  playcustomapp_v1.Resource$Accounts = Resource$Accounts;\n\n  var Resource$Accounts$Customapps =\n  /*#__PURE__*/\n  function () {\n    function Resource$Accounts$Customapps(context) {\n      _classCallCheck(this, Resource$Accounts$Customapps);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Accounts$Customapps, [{\n      key: \"create\",\n      value: function create(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/playcustomapp/v1/accounts/{account}/customApps').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'POST'\n          }, options),\n          params: params,\n          mediaUrl: (rootUrl + '/upload/playcustomapp/v1/accounts/{account}/customApps').replace(/([^:]\\/)\\/+/g, '$1'),\n          requiredParams: ['account'],\n          pathParams: ['account'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Accounts$Customapps;\n  }();\n\n  playcustomapp_v1.Resource$Accounts$Customapps = Resource$Accounts$Customapps;\n})(playcustomapp_v1 = exports.playcustomapp_v1 || (exports.playcustomapp_v1 = {}));","map":null,"metadata":{},"sourceType":"script"}