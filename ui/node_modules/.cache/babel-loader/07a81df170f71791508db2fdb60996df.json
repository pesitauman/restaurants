{"ast":null,"code":"import { combineReducers, applyMiddleware, createStore } from 'redux';\nimport { setAxiosConfig, reducer as restaurants } from 'redux-json-api';\nimport thunk from 'redux-thunk';\n\nfunction visibilityFilter() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '*';\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter;\n\n    default:\n      return state;\n  }\n}\n\nfunction current() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SET_CURRENT':\n      return action.restaurent;\n\n    default:\n      return state;\n  }\n} // function restaurants(state = [], action) {\n//   switch (action.type) {\n//     case 'DELETE':\n//       return state.filter(r => r.id !== action.id);\n//     case 'UPDATE':\n//       return state.map((r) => r.id === action.restaurent.id ? action.restaurent : r);\n//     case 'UPLOAD':\n//       return state.push(...action.restaurents);\n//     default:\n//       return state\n//   }\n// }\n\n\nvar reducer = combineReducers({\n  visibilityFilter: visibilityFilter,\n  current: current,\n  restaurants: restaurants\n});\nvar store = createStore(reducer, applyMiddleware(thunk));\nexport default store;","map":{"version":3,"sources":["/Users/pesiakovitz/goApps/src/restaurants/ui/src/reducers/store.js"],"names":["combineReducers","applyMiddleware","createStore","setAxiosConfig","reducer","restaurants","thunk","visibilityFilter","state","action","type","filter","current","restaurent","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,WAA3C,QAA8D,OAA9D;AACA,SAASC,cAAT,EAAyBC,OAAO,IAAIC,WAApC,QAAuD,gBAAvD;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,SAASC,gBAAT,GAA+C;AAAA,MAArBC,KAAqB,uEAAb,GAAa;AAAA,MAARC,MAAQ;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,uBAAL;AACE,aAAOD,MAAM,CAACE,MAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAED,SAASI,OAAT,GAAqC;AAAA,MAApBJ,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACnC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAOD,MAAM,CAACI,UAAd;;AACF;AACE,aAAOL,KAAP;AAJJ;AAMD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAMJ,OAAO,GAAGJ,eAAe,CAAC;AAAEO,EAAAA,gBAAgB,EAAhBA,gBAAF;AAAoBK,EAAAA,OAAO,EAAPA,OAApB;AAA6BP,EAAAA,WAAW,EAAXA;AAA7B,CAAD,CAA/B;AACA,IAAMS,KAAK,GAAGZ,WAAW,CAACE,OAAD,EAAUH,eAAe,CAACK,KAAD,CAAzB,CAAzB;AAEA,eAAeQ,KAAf","sourcesContent":["import { combineReducers, applyMiddleware, createStore } from 'redux'\nimport { setAxiosConfig, reducer as restaurants } from 'redux-json-api';\nimport thunk from 'redux-thunk';\n\nfunction visibilityFilter(state = '*', action) {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter\n    default:\n      return state\n  }\n}\n\nfunction current(state = {}, action) {\n  switch (action.type) {\n    case 'SET_CURRENT':\n      return action.restaurent\n    default:\n      return state\n  }\n}\n\n// function restaurants(state = [], action) {\n//   switch (action.type) {\n//     case 'DELETE':\n//       return state.filter(r => r.id !== action.id);\n//     case 'UPDATE':\n//       return state.map((r) => r.id === action.restaurent.id ? action.restaurent : r);\n//     case 'UPLOAD':\n//       return state.push(...action.restaurents);\n//     default:\n//       return state\n//   }\n// }\n\nconst reducer = combineReducers({ visibilityFilter, current, restaurants })\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nexport default store"]},"metadata":{},"sourceType":"module"}