{"ast":null,"code":"\"use strict\"; // Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _createClass = require(\"/Users/pesiakovitz/goApps/src/restaurants/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/pesiakovitz/goApps/src/restaurants/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar googleapis_common_1 = require(\"googleapis-common\"); // tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\n\n\nvar cloudprivatecatalog_v1beta1;\n\n(function (cloudprivatecatalog_v1beta1) {\n  /**\n   * Cloud Private Catalog API\n   *\n   * Enable cloud users to discover enterprise catalogs and products in their organizations.\n   *\n   * @example\n   * const {google} = require('googleapis');\n   * const cloudprivatecatalog = google.cloudprivatecatalog('v1beta1');\n   *\n   * @namespace cloudprivatecatalog\n   * @type {Function}\n   * @version v1beta1\n   * @variation v1beta1\n   * @param {object=} options Options for Cloudprivatecatalog\n   */\n  var Cloudprivatecatalog = function Cloudprivatecatalog(options, google) {\n    _classCallCheck(this, Cloudprivatecatalog);\n\n    this.context = {\n      _options: options || {},\n      google: google\n    };\n    this.folders = new Resource$Folders(this.context);\n    this.organizations = new Resource$Organizations(this.context);\n    this.projects = new Resource$Projects(this.context);\n  };\n\n  cloudprivatecatalog_v1beta1.Cloudprivatecatalog = Cloudprivatecatalog;\n\n  var Resource$Folders = function Resource$Folders(context) {\n    _classCallCheck(this, Resource$Folders);\n\n    this.context = context;\n    this.catalogs = new Resource$Folders$Catalogs(this.context);\n    this.products = new Resource$Folders$Products(this.context);\n    this.versions = new Resource$Folders$Versions(this.context);\n  };\n\n  cloudprivatecatalog_v1beta1.Resource$Folders = Resource$Folders;\n\n  var Resource$Folders$Catalogs =\n  /*#__PURE__*/\n  function () {\n    function Resource$Folders$Catalogs(context) {\n      _classCallCheck(this, Resource$Folders$Catalogs);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Folders$Catalogs, [{\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+resource}/catalogs:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Folders$Catalogs;\n  }();\n\n  cloudprivatecatalog_v1beta1.Resource$Folders$Catalogs = Resource$Folders$Catalogs;\n\n  var Resource$Folders$Products =\n  /*#__PURE__*/\n  function () {\n    function Resource$Folders$Products(context) {\n      _classCallCheck(this, Resource$Folders$Products);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Folders$Products, [{\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+resource}/products:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Folders$Products;\n  }();\n\n  cloudprivatecatalog_v1beta1.Resource$Folders$Products = Resource$Folders$Products;\n\n  var Resource$Folders$Versions =\n  /*#__PURE__*/\n  function () {\n    function Resource$Folders$Versions(context) {\n      _classCallCheck(this, Resource$Folders$Versions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Folders$Versions, [{\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+resource}/versions:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Folders$Versions;\n  }();\n\n  cloudprivatecatalog_v1beta1.Resource$Folders$Versions = Resource$Folders$Versions;\n\n  var Resource$Organizations = function Resource$Organizations(context) {\n    _classCallCheck(this, Resource$Organizations);\n\n    this.context = context;\n    this.catalogs = new Resource$Organizations$Catalogs(this.context);\n    this.products = new Resource$Organizations$Products(this.context);\n    this.versions = new Resource$Organizations$Versions(this.context);\n  };\n\n  cloudprivatecatalog_v1beta1.Resource$Organizations = Resource$Organizations;\n\n  var Resource$Organizations$Catalogs =\n  /*#__PURE__*/\n  function () {\n    function Resource$Organizations$Catalogs(context) {\n      _classCallCheck(this, Resource$Organizations$Catalogs);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Organizations$Catalogs, [{\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+resource}/catalogs:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Organizations$Catalogs;\n  }();\n\n  cloudprivatecatalog_v1beta1.Resource$Organizations$Catalogs = Resource$Organizations$Catalogs;\n\n  var Resource$Organizations$Products =\n  /*#__PURE__*/\n  function () {\n    function Resource$Organizations$Products(context) {\n      _classCallCheck(this, Resource$Organizations$Products);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Organizations$Products, [{\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+resource}/products:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Organizations$Products;\n  }();\n\n  cloudprivatecatalog_v1beta1.Resource$Organizations$Products = Resource$Organizations$Products;\n\n  var Resource$Organizations$Versions =\n  /*#__PURE__*/\n  function () {\n    function Resource$Organizations$Versions(context) {\n      _classCallCheck(this, Resource$Organizations$Versions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Organizations$Versions, [{\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+resource}/versions:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Organizations$Versions;\n  }();\n\n  cloudprivatecatalog_v1beta1.Resource$Organizations$Versions = Resource$Organizations$Versions;\n\n  var Resource$Projects = function Resource$Projects(context) {\n    _classCallCheck(this, Resource$Projects);\n\n    this.context = context;\n    this.catalogs = new Resource$Projects$Catalogs(this.context);\n    this.products = new Resource$Projects$Products(this.context);\n    this.versions = new Resource$Projects$Versions(this.context);\n  };\n\n  cloudprivatecatalog_v1beta1.Resource$Projects = Resource$Projects;\n\n  var Resource$Projects$Catalogs =\n  /*#__PURE__*/\n  function () {\n    function Resource$Projects$Catalogs(context) {\n      _classCallCheck(this, Resource$Projects$Catalogs);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects$Catalogs, [{\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+resource}/catalogs:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Catalogs;\n  }();\n\n  cloudprivatecatalog_v1beta1.Resource$Projects$Catalogs = Resource$Projects$Catalogs;\n\n  var Resource$Projects$Products =\n  /*#__PURE__*/\n  function () {\n    function Resource$Projects$Products(context) {\n      _classCallCheck(this, Resource$Projects$Products);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects$Products, [{\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+resource}/products:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Products;\n  }();\n\n  cloudprivatecatalog_v1beta1.Resource$Projects$Products = Resource$Projects$Products;\n\n  var Resource$Projects$Versions =\n  /*#__PURE__*/\n  function () {\n    function Resource$Projects$Versions(context) {\n      _classCallCheck(this, Resource$Projects$Versions);\n\n      this.context = context;\n    }\n\n    _createClass(Resource$Projects$Versions, [{\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n\n        var rootUrl = options.rootUrl || 'https://cloudprivatecatalog.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v1beta1/{+resource}/versions:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: ['resource'],\n          pathParams: ['resource'],\n          context: this.context\n        };\n\n        if (callback) {\n          googleapis_common_1.createAPIRequest(parameters, callback);\n        } else {\n          return googleapis_common_1.createAPIRequest(parameters);\n        }\n      }\n    }]);\n\n    return Resource$Projects$Versions;\n  }();\n\n  cloudprivatecatalog_v1beta1.Resource$Projects$Versions = Resource$Projects$Versions;\n})(cloudprivatecatalog_v1beta1 = exports.cloudprivatecatalog_v1beta1 || (exports.cloudprivatecatalog_v1beta1 = {}));","map":null,"metadata":{},"sourceType":"script"}