{"ast":null,"code":"import _classCallCheck from \"/Users/pesiakovitz/goApps/src/restaurants/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pesiakovitz/goApps/src/restaurants/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pesiakovitz/goApps/src/restaurants/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pesiakovitz/goApps/src/restaurants/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pesiakovitz/goApps/src/restaurants/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pesiakovitz/goApps/src/restaurants/ui/src/components/restaurentsList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\"; // import { Table, TableHeaderColumn } from 'react-bootstrap';\n// import { TableHeaderColumn, BootstrapTable } from 'react-bootstrap-table'\n\nimport { fetchRestaurants } from '../actions';\nimport { restaurentItem } from './restaurentItem'; // import { getrestaurents } from \"../redux/selectors\";\n// import { getrestaurentsByVisibilityFilter } from \"../redux/selectors\";\n// import { VISIBILITY_FILTERS } from \"../constants\";\n// const restaurentList = ({ restaurents }) => (\n//   <ul className=\"restaurent-list\">\n//     {restaurents && restaurents.length\n//       ? restaurents.map((restaurent, index) => {\n//           return <restaurent key={`restaurent-${restaurent.id}`} restaurent={restaurent} />;\n//         })\n//       : \"No restaurents\"}\n//   </ul>\n// );\n\nvar restaurantsTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(restaurantsTable, _React$Component);\n\n  function restaurantsTable() {\n    _classCallCheck(this, restaurantsTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(restaurantsTable).apply(this, arguments));\n  }\n\n  _createClass(restaurantsTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onFetchRestaurants();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"table\", {\n        className: \"restaurant-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Type\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Phone\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Location\"), this.props.restaurants && this.props.restaurants.length ? this.props.restaurants.map(function (restaurant) {\n        return React.createElement(\"restaurentItem\", {\n          key: \"restaurent-\".concat(restaurant.id),\n          restaurant: restaurant,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      }) : React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"No restaurents\"));\n    }\n  }]);\n\n  return restaurantsTable;\n}(React.Component); // class restaurantsTable extends React.Component {\n//   componentDidMount() {\n//     this.props.onFetchRestaurants();\n//   }\n//   render() {\n//     console.log('%%%%%%%%',this.props.restaurants);\n//     return (\n//       <Table data={ this.props.restaurants } options={ { noDataText: 'No Restaurents' } }>\n//         <TableHeaderColumn dataField='Id' isKey>ID</TableHeaderColumn>\n//         <TableHeaderColumn dataField='Name'>Name</TableHeaderColumn>\n//         <TableHeaderColumn dataField='Type'>Type</TableHeaderColumn>\n//         <TableHeaderColumn dataField='Phone'>Phone</TableHeaderColumn>\n//         <TableHeaderColumn dataField='Location'>Location</TableHeaderColumn>\n//       </Table>\n//     );\n//   }\n// }\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log('@@@@@@@@@@@@', state);\n  var restaurants = state.restaurants || {\n    data: []\n  };\n  return {\n    restaurants: restaurants\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onFetchRestaurants: function onFetchRestaurants() {\n      dispatch(fetchRestaurants());\n    }\n  };\n}; // export default restaurentList;\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(restaurantsTable);","map":{"version":3,"sources":["/Users/pesiakovitz/goApps/src/restaurants/ui/src/components/restaurentsList.js"],"names":["React","connect","fetchRestaurants","restaurentItem","restaurantsTable","props","onFetchRestaurants","restaurants","length","map","restaurant","id","Component","mapStateToProps","state","console","log","data","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,cAAT,QAA+B,kBAA/B,C,CAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEMC,gB;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWC,kBAAX;AACD;;;6BAEQ;AACP,aACE;AAAO,QAAA,SAAS,EAAC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJA,EAMC,KAAKD,KAAL,CAAWE,WAAX,IAA0B,KAAKF,KAAL,CAAWE,WAAX,CAAuBC,MAAjD,GACG,KAAKH,KAAL,CAAWE,WAAX,CAAuBE,GAAvB,CAA2B,UAACC,UAAD,EAAgB;AACzC,eAAQ;AAAgB,UAAA,GAAG,uBAAgBA,UAAU,CAACC,EAA3B,CAAnB;AAAoD,UAAA,UAAU,EAAED,UAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACD,OAFD,CADH,GAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVJ,CADF;AAeD;;;;EArB4BV,KAAK,CAACY,S,GAuBrC;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BF,KAA3B;AACA,MAAMP,WAAW,GAAGO,KAAK,CAACP,WAAN,IAAqB;AAAEU,IAAAA,IAAI,EAAE;AAAR,GAAzC;AACA,SAAO;AAAEV,IAAAA,WAAW,EAAXA;AAAF,GAAP;AACD,CAJD;;AAMA,IAAMW,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLb,IAAAA,kBAAkB,EAAE,8BAAM;AACxBa,MAAAA,QAAQ,CAACjB,gBAAgB,EAAjB,CAAR;AACD;AAHI,GAAP;AAKD,CAND,C,CAOA;;;AACA,eAAeD,OAAO,CAACY,eAAD,EAAkBK,kBAAlB,CAAP,CAA6Cd,gBAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n// import { Table, TableHeaderColumn } from 'react-bootstrap';\n// import { TableHeaderColumn, BootstrapTable } from 'react-bootstrap-table'\nimport { fetchRestaurants } from '../actions'\nimport { restaurentItem } from './restaurentItem'\n\n\n// import { getrestaurents } from \"../redux/selectors\";\n// import { getrestaurentsByVisibilityFilter } from \"../redux/selectors\";\n// import { VISIBILITY_FILTERS } from \"../constants\";\n\n// const restaurentList = ({ restaurents }) => (\n//   <ul className=\"restaurent-list\">\n//     {restaurents && restaurents.length\n//       ? restaurents.map((restaurent, index) => {\n//           return <restaurent key={`restaurent-${restaurent.id}`} restaurent={restaurent} />;\n//         })\n//       : \"No restaurents\"}\n//   </ul>\n// );\n\nclass restaurantsTable extends React.Component {\n  componentDidMount() {\n    this.props.onFetchRestaurants();\n  }\n\n  render() {\n    return (\n      <table className=\"restaurant-list\">\n      <th>Name</th>\n      <th>Type</th>\n      <th>Phone</th>\n      <th>Location</th>\n  \n      {this.props.restaurants && this.props.restaurants.length\n        ? this.props.restaurants.map((restaurant) => {\n            return (<restaurentItem key={`restaurent-${restaurant.id}`} restaurant={restaurant} />);\n          })\n        : <tr>No restaurents</tr>} \n      </table>\n\n    );\n  }\n}\n// class restaurantsTable extends React.Component {\n\n//   componentDidMount() {\n//     this.props.onFetchRestaurants();\n//   }\n\n//   render() {\n//     console.log('%%%%%%%%',this.props.restaurants);\n//     return (\n//       <Table data={ this.props.restaurants } options={ { noDataText: 'No Restaurents' } }>\n//         <TableHeaderColumn dataField='Id' isKey>ID</TableHeaderColumn>\n//         <TableHeaderColumn dataField='Name'>Name</TableHeaderColumn>\n//         <TableHeaderColumn dataField='Type'>Type</TableHeaderColumn>\n//         <TableHeaderColumn dataField='Phone'>Phone</TableHeaderColumn>\n//         <TableHeaderColumn dataField='Location'>Location</TableHeaderColumn>\n//       </Table>\n//     );\n//   }\n// }\n\nconst mapStateToProps = (state) => {\n  console.log('@@@@@@@@@@@@',state)\n  const restaurants = state.restaurants || { data: [] };\n  return { restaurants }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchRestaurants: () => {\n      dispatch(fetchRestaurants());\n    }\n  };\n};\n// export default restaurentList;\nexport default connect(mapStateToProps, mapDispatchToProps)(restaurantsTable);\n"]},"metadata":{},"sourceType":"module"}