{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pesiakovitz/goApps/src/restaurants/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/pesiakovitz/goApps/src/restaurants/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/pesiakovitz/goApps/src/restaurants/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport function parseData(_x) {\n  return _parseData.apply(this, arguments);\n}\n\nfunction _parseData() {\n  _parseData = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(data) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", Promise.all(data.map(\n            /*#__PURE__*/\n            function () {\n              var _ref = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee(restaurent) {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.t0 = _objectSpread;\n                        _context.t1 = {};\n                        _context.t2 = restaurent;\n                        _context.next = 5;\n                        return locationToAddress(restaurent.Location);\n\n                      case 5:\n                        _context.t3 = _context.sent;\n                        _context.t4 = {\n                          address: _context.t3\n                        };\n                        return _context.abrupt(\"return\", (0, _context.t0)(_context.t1, _context.t2, _context.t4));\n\n                      case 8:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x3) {\n                return _ref.apply(this, arguments);\n              };\n            }())));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _parseData.apply(this, arguments);\n}\n\nexport function locationToAddress(_x2) {\n  return _locationToAddress.apply(this, arguments);\n}\n\nfunction _locationToAddress() {\n  _locationToAddress = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(location) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", Promise.resolve('dffdf'));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _locationToAddress.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/pesiakovitz/goApps/src/restaurants/ui/src/utils/parser.js"],"names":["parseData","data","Promise","all","map","restaurent","locationToAddress","Location","address","location","resolve"],"mappings":";;;AAAA,gBAAsBA,SAAtB;AAAA;AAAA;;;;;2BAAO,kBAAyBC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,8CACEC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,GAAL;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAS,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCACvBA,UADuB;AAAA;AAAA,+BAEXC,iBAAiB,CAACD,UAAU,CAACE,QAAZ,CAFN;;AAAA;AAAA;AAAA;AAE1BC,0BAAAA,OAF0B;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAT;;AAAA;AAAA;AAAA;AAAA,gBAAZ,CADF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAOP,gBAAsBF,iBAAtB;AAAA;AAAA;;;;;2BAAO,kBAAiCG,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,8CACEP,OAAO,CAACQ,OAAR,CAAgB,OAAhB,CADF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["export async function parseData(data) {\n  return Promise.all(data.map(async (restaurent) =>({\n    ...restaurent,\n    address: await locationToAddress(restaurent.Location)\n  })));\n}\n\nexport async function locationToAddress(location) {\n  return Promise.resolve('dffdf');\n  // const geocoder = new google.maps.Geocoder();\n  // const latlngStr = location.split(',', 2);\n  // const latlng = {lat: parseFloat(latlngStr[0]), lng: parseFloat(latlngStr[1])};\n  // return new Promise(function(resolve, reject) {\n  //   geocoder.geocode({'location': latlng}, function(results, status) {\n  //     if (status === 'OK') {\n  //       resolve(results[0].formatted_address);\n  //     } else {\n  //       reject(new Error(`Couldn't find the location for ${location}`));\n  //     }\n  //   })\n  // })\n}"]},"metadata":{},"sourceType":"module"}