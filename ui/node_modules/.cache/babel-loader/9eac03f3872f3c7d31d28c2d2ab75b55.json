{"ast":null,"code":"import axios from 'axios';\nexport function load(data) {\n  return {\n    type: 'LOAD',\n    data: data\n  };\n}\nexport function fetchRestaurants() {\n  return function (dispatch) {\n    return axios.get(\"api/restaurants/\").then(function (_ref) {\n      var data = _ref.data;\n      dispatch(load(data));\n    });\n  };\n}\nexport function uploadRestaurants() {\n  console.log(':::::::::::::::::::::::');\n  return function (dispatch, file) {\n    return axios.post(\"api/restaurants/\", {\n      file: file\n    }).then(function (_ref2) {\n      var data = _ref2.data;\n      dispatch(load(data));\n    });\n  };\n}","map":{"version":3,"sources":["/Users/pesiakovitz/goApps/src/restaurants/ui/src/actions.js"],"names":["axios","load","data","type","fetchRestaurants","dispatch","get","then","uploadRestaurants","console","log","file","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,IAAT,CAAcC,IAAd,EAAoB;AACzB,SAAO;AACLC,IAAAA,IAAI,EAAE,MADD;AAELD,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID;AAED,OAAO,SAASE,gBAAT,GAA4B;AACjC,SAAO,UAASC,QAAT,EAAmB;AACxB,WAAOL,KAAK,CAACM,GAAN,CAAU,kBAAV,EACJC,IADI,CACC,gBAAc;AAAA,UAAXL,IAAW,QAAXA,IAAW;AACpBG,MAAAA,QAAQ,CAACJ,IAAI,CAACC,IAAD,CAAL,CAAR;AACD,KAHM,CAAP;AAID,GALD;AAMD;AAED,OAAO,SAASM,iBAAT,GAA6B;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,SAAO,UAASL,QAAT,EAAmBM,IAAnB,EAAyB;AAC9B,WAAOX,KAAK,CAACY,IAAN,CAAW,kBAAX,EAA+B;AAACD,MAAAA,IAAI,EAAJA;AAAD,KAA/B,EACJJ,IADI,CACC,iBAAc;AAAA,UAAXL,IAAW,SAAXA,IAAW;AACpBG,MAAAA,QAAQ,CAACJ,IAAI,CAACC,IAAD,CAAL,CAAR;AACD,KAHM,CAAP;AAID,GALD;AAMD","sourcesContent":["import axios from 'axios';\n\nexport function load(data) {\n  return {\n    type: 'LOAD',\n    data,\n  };\n}\n\nexport function fetchRestaurants() {\n  return function(dispatch) {\n    return axios.get(\"api/restaurants/\")\n      .then(({ data }) => {\n      dispatch(load(data));\n    });\n  };\n}\n\nexport function uploadRestaurants() {\n  console.log(':::::::::::::::::::::::')\n  return function(dispatch, file) {\n    return axios.post(\"api/restaurants/\", {file})\n      .then(({ data }) => {\n      dispatch(load(data));\n    });\n  };\n}"]},"metadata":{},"sourceType":"module"}