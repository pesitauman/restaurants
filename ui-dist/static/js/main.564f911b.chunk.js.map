{"version":3,"sources":["store.js","reducers/index.js","utils/geoParser.js","actions/index.js","components/restaurantItem.js","components/restaurantsTable.js","components/uploader.js","components/locationSearchInput.js","components/restaurantEditor.js","components/filter.js","index.js"],"names":["reducer","combineReducers","visibilityFilter","state","arguments","length","undefined","action","type","data","filter","restaurants","r","Id","map","restaurant","current","Object","objectSpread","store","createStore","applyMiddleware","thunk","parseData","_x","_parseData","apply","this","_callee2","regenerator_default","a","wrap","_context2","prev","next","abrupt","Promise","all","_ref","asyncToGenerator","mark","_callee","restaurent","_context","t0","t1","t2","locationToAddress","Location","t3","sent","t4","address","stop","_x4","_x2","_locationToAddress","_callee3","location","_location$split","_location$split2","lat","lng","response","_context3","split","slicedToArray","geocode","fromLatLng","parseFloat","results","formatted_address","addressToLocation","_x3","_addressToLocation","_callee4","_response$results$0$g","_context4","fromAddress","geometry","concat","setVisibilityFilter","load","setApiKey","RestaurantItem","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","_this","react_default","createElement","props","Name","Type","Phone","onClick","onSetCurrent","React","Component","RestaurantsTable","onFetch","className","restaurantItem_RestaurantItem","connect","dispatch","_ref2","axios","get","Uploader","call","onFileChange","event","setState","file","target","files","_this2","onChange","onUpload","_ref5","formData","_ref6","FormData","append","post","uploadRestaurants","LocationSearchInput","dist_default","onAddressChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","suggestion","active","style","backgroundColor","cursor","description","RestaurantEditor","onNameChange","onPropChange","onTypeChange","onPhoneChange","onAnyClick","eventName","preventDefault","onUpdate","onDelete","onCancel","locationSearchInput","_ref3","put","updateRestaurant","_ref4","delete","deleteRestaurant","prop","Filter","onFilterChange","onSearch","keyword","_ref7","_callee5","_ref8","_context5","_x5","filterRestaurants","rootElement","document","getElementById","ReactDOM","render","es","restaurantsTable","uploader","restaurantEditor"],"mappings":"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","file":"static/js/main.564f911b.chunk.js","sourcesContent":["import { combineReducers, applyMiddleware, createStore } from 'redux'\nimport thunk from 'redux-thunk';\nimport { visibilityFilter, restaurants, current } from './reducers'\n\nconst reducer = combineReducers({ visibilityFilter, restaurants, current })\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nexport default store","export function visibilityFilter(state = '', action) {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.data.filter\n    default:\n      return state\n  }\n}\n\nexport function current(state = null, action) {\n  switch (action.type) {\n    case 'SET_CURRENT':\n      return action.data.restaurant;\n    case 'RESET_CURRENT':\n    case 'DELETE':\n    case 'UPDATE':\n      return null;\n    case 'CHANGE_CURRENT':\n      return { ...state, ...action.data }\n    default:\n      return state\n  }\n}\n\nexport function restaurants(state = [], action) {\n  switch (action.type) {\n    case 'DELETE':\n      return state.filter(r => r.Id !== action.data.Id);\n    case 'UPDATE':\n      return state.map((r) => r.Id === action.data.restaurant.Id ? action.data.restaurant : r);\n    case 'LOAD':\n      return action.data;\n    default:\n      return state\n  }\n}","import geocode from 'react-geocode';\ngeocode.setApiKey(\"AIzaSyCRLCb1n3Kvi4mUh1HLUjopmtg70iWPZk8\");\n\nexport async function parseData(data) {\n  return Promise.all(data.map(async (restaurent) =>({\n    ...restaurent,\n    address: await locationToAddress(restaurent.Location)\n  })));\n}\n\nexport async function locationToAddress(location) {\n  const [lat, lng] = location.split('/', 2);\n  if (!lat || !lng) return location;\n  const response = await geocode.fromLatLng(parseFloat(lat), parseFloat(lng))\n  return response.results[0].formatted_address;\n}\n\nexport async function addressToLocation(address) {\n  const response = await geocode.fromAddress(\"Eiffel Tower\")\n  const { lat, lng } = response.results[0].geometry.location;\n  return `${lat}/${lng}`;\n}","import axios from 'axios';\nimport { parseData, addressToLocation } from '../utils/geoParser'\n\nexport function setVisibilityFilter(data) {\n  return {\n    type: 'SET_VISIBILITY_FILTER',\n    data,\n  };\n}\n\nexport function setCurrent(data) {\n  return {\n    type: 'SET_CURRENT',\n    data,\n  };\n}\n\nexport function load(data) {\n  return {\n    type: 'LOAD',\n    data,\n  };\n}\n\nexport function update(data) {\n  return {\n    type: 'UPDATE',\n    data,\n  };\n}\n\nexport function del(data) {\n  return {\n    type: 'DELETE',\n    data,\n  };\n}\n\nexport function resetCurrentRestaurant(data) {\n  return {\n    type: 'RESET_CURRENT',\n    data,\n  };\n}\nexport function changeCurrentRestaurant(data) {\n  return {\n    type: 'CHANGE_CURRENT',\n    data,\n  };\n}\n\nexport function fetchRestaurants() {\n  return async function(dispatch) {\n    const { data } = await axios.get(\"api/restaurants/\");\n    dispatch(setVisibilityFilter({ filter: '' }));\n    dispatch(load(await parseData(data)));\n  };\n}\n\nexport function updateRestaurant(restaurant) {\n  return async function(dispatch) {\n    restaurant.Location = await addressToLocation(restaurant.address);\n    await axios.put(`api/restaurants/${restaurant.Id}`, restaurant)\n    dispatch(update({ restaurant }));\n  };\n}\n\nexport function deleteRestaurant(restaurant) {\n  return async function(dispatch) {\n    await axios.delete(`api/restaurants/${restaurant.Id}`)\n    dispatch(del({ Id: restaurant.Id }));\n  };\n}\n\nexport function uploadRestaurants(file) {\n  return async function(dispatch) {\n    const formData = new FormData();\n    formData.append('file', file);\n    const { data } = await axios.post(\"api/restaurants/upload\", formData)\n    dispatch(setVisibilityFilter({ filter: '' }));\n    dispatch(load(await parseData(data)));\n  };\n}\n\nexport function filterRestaurants(keyword) {\n  return async function(dispatch) {\n    const { data } = await axios.get(`api/restaurants/${keyword}`)\n    dispatch(load(await parseData(data)));\n  };\n}","import React from \"react\";\n\nexport class RestaurantItem extends React.Component {\n  render() {\n    return (\n      <tr>\n        <td>{this.props.restaurant.Name} </td>\n        <td>{this.props.restaurant.Type} </td>\n        <td>{this.props.restaurant.Phone} </td>\n        <td>{this.props.restaurant.address} </td>\n        <td>\n          <input\n            type='button'\n            value='edit'\n            onClick={() => this.props.onSetCurrent(this.props.restaurant)}\n          />\n        </td>\n      </tr>\n    )\n  }\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchRestaurants, setCurrent } from '../actions'\nimport { RestaurantItem } from './restaurantItem'\n\nclass RestaurantsTable extends React.Component {\n  componentDidMount() {\n    this.props.onFetch();\n  }\n  \n  render() {\n    return (\n      <table className=\"restaurant-list\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Phone</th>\n            <th>Location</th>\n          </tr>\n        </thead>\n\n        <tbody>\n        {this.props.restaurants && this.props.restaurants.length\n          ? this.props.restaurants.map((restaurant) => {\n              return (\n                <RestaurantItem\n                  key={`restaurant-${restaurant.Id}`}\n                  restaurant={restaurant}\n                  onSetCurrent={this.props.onSetCurrent}\n                />\n              );\n            })\n          : <tr><td>No restaurants</td></tr>}\n        </tbody>\n      </table>\n\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const restaurants = state.restaurants || { data: [] };\n  return { restaurants }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetch: () => {\n      dispatch(fetchRestaurants());\n    },\n    onSetCurrent: (restaurant) => {\n      dispatch(setCurrent({ restaurant }));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RestaurantsTable);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { uploadRestaurants } from '../actions'\n\nclass Uploader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n    }\n  }\n\n  onFileChange = (event) => {\n    this.setState({\n      file: event.target.files[0],\n    })\n  }\n  \n  render() {\n    return (\n      <div>\n        <input\n          className=\"restaurant-input\"\n          type=\"file\"\n          onChange={this.onFileChange}\n        />\n        <input\n          type=\"button\"\n          value=\"Upload\"\n          onClick={() => this.props.onUpload(this.state.file)}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUpload: (file) => {\n      dispatch(uploadRestaurants(file))\n    },\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Uploader);\n","import React from 'react';\nimport PlacesAutocomplete from 'react-places-autocomplete';\n \nclass LocationSearchInput extends React.Component {\n  render() {\n    return (\n      <PlacesAutocomplete\n        value={this.props.address}\n        onChange={(address) => this.props.onAddressChange(address)}\n        onSelect={(address) => this.props.onAddressChange(address)}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <span>\n            <input\n              {...getInputProps({\n                placeholder: 'Search Places ...',\n                className: 'location-search-input',\n              })}\n            />\n            <ul className=\"autocomplete-dropdown-container\">\n              {loading && <li>...</li>}\n              {suggestions.map(suggestion => {\n                const className = suggestion.active\n                  ? 'suggestion-item--active'\n                  : 'suggestion-item';\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                  ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                  : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                return (\n                  <li\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                  >\n                    <span>{suggestion.description}</span>\n                  </li>\n                );\n              })}\n            </ul>\n          </span>\n        )}\n      </PlacesAutocomplete>\n    );\n  }\n}\n\nexport default LocationSearchInput;","import React from \"react\";\nimport LocationSearchInput from './locationSearchInput'\nimport { connect } from \"react-redux\";\nimport {\n  updateRestaurant,\n  deleteRestaurant,\n  resetCurrentRestaurant,\n  changeCurrentRestaurant,\n } from '../actions'\n\nclass RestaurantEditor extends React.Component {\n\n  onNameChange = (event) => this.props.onPropChange({ Name: event.target.value });\n  onTypeChange = (event) => this.props.onPropChange({ Type: event.target.value });\n  onPhoneChange = (event) => this.props.onPropChange({ Phone: event.target.value });\n  onAddressChange = (address) => this.props.onPropChange({ address });\n\n  onAnyClick = (event, eventName) => {\n    event.preventDefault();\n    this.props[eventName](this.props.restaurant)\n  }\n\n  onUpdate = (event) => this.onAnyClick(event, 'onUpdate');\n  onDelete = (event) => this.onAnyClick(event, 'onDelete');\n  onCancel = (event) => this.onAnyClick(event, 'onCancel');\n\n  render() {\n    // if(!this.props.restaurant) return '';\n    return this.props.restaurant && (\n      <div>\n      <form>\n        <h3>Restaurant Editor</h3>\n        <div>\n          <label>Name</label>\n          <input\n            value={this.props.restaurant.Name}\n            onChange={this.onNameChange}\n          />\n        </div>\n        <div>\n          <label>Type</label>\n          <input\n            value={this.props.restaurant.Type}\n            onChange={this.onTypeChange}\n          />\n        </div>\n        <div>\n          <label>Phone</label>\n          <input\n            value={this.props.restaurant.Phone}\n            onChange={this.onPhoneChange}\n          />\n        </div>\n        <div>\n          <label>Location</label>\n          <LocationSearchInput\n            address={this.props.restaurant.address}\n            onAddressChange={this.onAddressChange}\n          />\n        </div>\n        <button onClick={this.onUpdate}>Save</button>\n        <button onClick={this.onDelete}>Delete</button>\n        <button onClick={this.onCancel}>Cancel</button>\n      </form>\n    </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { restaurant: state.current }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUpdate: (restaurant) => {\n      dispatch(updateRestaurant(restaurant))\n    },\n    onDelete: (restaurant) => {\n      dispatch(deleteRestaurant(restaurant))\n    },\n    onCancel: (restaurant) => {\n      dispatch(resetCurrentRestaurant(restaurant))\n    },\n    onPropChange: (prop) => {\n      dispatch(changeCurrentRestaurant(prop))\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RestaurantEditor);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { filterRestaurants, setVisibilityFilter } from '../actions'\n\nclass Filter extends React.Component {\n\n  onFilterChange = (event) => this.props.onFilterChange(event.target.value);\n  onSearch = () => this.props.onSearch(this.props.visibilityFilter);\n  \n  render() {\n    return (\n      <div>\n        <input\n          className=\"restaurant-filter\"\n          value={this.props.visibilityFilter}\n          onChange={this.onFilterChange}\n        />\n        <input\n          type=\"button\"\n          value=\"Search\"\n          onClick={this.onSearch}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { visibilityFilter: state.visibilityFilter }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearch: (keyword) => {\n      dispatch(filterRestaurants(keyword));\n    },\n    onFilterChange: (keyword) => {\n      dispatch(setVisibilityFilter({ filter: keyword }))\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport RestaurantsTable from \"./components/restaurantsTable\";\nimport Uploader from \"./components/uploader\";\nimport RestaurantEditor from \"./components/restaurantEditor\";\nimport Filter from \"./components/filter\";\nimport './styles.css';\n\nconst rootElement = document.getElementById(\"app\");\n\nReactDOM.render(\n  <Provider store={store}>\n    <Filter/>\n    <RestaurantsTable/>\n    <Uploader/>\n    <RestaurantEditor/>\n  </Provider>,\n  rootElement\n);"],"sourceRoot":""}